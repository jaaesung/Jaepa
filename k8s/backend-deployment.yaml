apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: jaepa
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: jaepa-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        env:
        - name: MONGODB_URI
          value: "mongodb://$(MONGO_USERNAME):$(MONGO_PASSWORD)@mongodb:27017/jaepa"
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              name: jaepa-secrets
              key: MONGO_USERNAME
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: jaepa-secrets
              key: MONGO_PASSWORD
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: jaepa-secrets
              key: JWT_SECRET_KEY
        - name: POLYGON_API_KEY
          valueFrom:
            secretKeyRef:
              name: jaepa-secrets
              key: POLYGON_API_KEY
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: jaepa-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: jaepa-config
              key: LOG_LEVEL
        - name: MONGO_DB_NAME
          valueFrom:
            configMapKeyRef:
              name: jaepa-config
              key: MONGO_DB_NAME
        - name: CORS_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: jaepa-config
              key: CORS_ORIGINS
        - name: JWT_ALGORITHM
          value: "HS256"
        - name: ACCESS_TOKEN_EXPIRE_MINUTES
          value: "30"
        - name: REFRESH_TOKEN_EXPIRE_DAYS
          value: "7"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: jaepa
spec:
  selector:
    app: backend
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP
