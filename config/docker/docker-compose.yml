version: "3.8"

services:
  # MongoDB 데이터베이스
  mongodb:
    image: mongo:latest
    restart: always
    container_name: jaepa-mongodb
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - jaepa-network

  # 백엔드 API 서비스
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: final
    restart: always
    container_name: jaepa-backend
    depends_on:
      - mongodb
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/jaepa
      - MONGO_DB_NAME=jaepa
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      - ENVIRONMENT=production
      - LOG_LEVEL=info
      - CORS_ORIGINS=http://localhost:80,http://frontend
      - POLYGON_API_KEY=${POLYGON_API_KEY}
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - jaepa-network

  # 프론트엔드 웹 서비스
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    container_name: jaepa-frontend
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=/api
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - jaepa-network

  # 크롤러 서비스 (주기적 실행)
  crawler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jaepa-crawler
    depends_on:
      - mongodb
      - backend
    command: python -m crawling.scheduler
    environment:
      - MONGODB_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/jaepa
      - MONGO_DB_NAME=jaepa
      - ENVIRONMENT=production
      - LOG_LEVEL=info
    volumes:
      - ./logs:/app/logs
    networks:
      - jaepa-network

  # 감성 분석 서비스 (주기적 실행)
  analyzer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jaepa-analyzer
    depends_on:
      - mongodb
      - backend
    command: python -m analysis.scheduler_analyzer
    environment:
      - MONGODB_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/jaepa
      - MONGO_DB_NAME=jaepa
      - ENVIRONMENT=production
      - LOG_LEVEL=info
    volumes:
      - ./logs:/app/logs
    networks:
      - jaepa-network

volumes:
  mongodb_data:
    driver: local

networks:
  jaepa-network:
    driver: bridge
